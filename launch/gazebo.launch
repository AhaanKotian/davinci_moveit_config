<?xml version="1.0"?>
<launch>
  <!-- Gazebo options -->
  <arg name="gazebo_gui" default="true" doc="Start Gazebo GUI"/>
  <arg name="paused" default="false" doc="Start Gazebo paused"/>
  <arg name="world_name" default="worlds/empty.world" doc="Gazebo world file"/>
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
  <arg name="initial_joint_positions" default=" -J ecm_main_insertion_joint 0 -J ecm_pitch_front_joint 0.25 -J ecm_tool_joint 0 -J ecm_yaw_joint -0.1 -J suj_ecm_J0 0.6 -J suj_ecm_J1 0 -J suj_ecm_J2 0 -J suj_ecm_J3 0 -J suj_psm1_J0 0 -J suj_psm1_J1 0 -J suj_psm1_J2 -1.5 -J suj_psm1_J3 -0.5 -J suj_psm1_J4 0 -J suj_psm2_J0 0 -J suj_psm2_J1 0 -J suj_psm2_J2 1.5 -J suj_psm2_J3 0.5 -J suj_psm2_J4 0" doc="Initial joint configuration of the robot"/>

  <group ns="/">
  <!-- Start Gazebo paused to allow the controllers to pickup the initial pose -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
    <arg name="paused" value="true"/>
  </include>

  <!-- Set the robot urdf on the parameter server -->
   <param name="robot_description" textfile="$(find davinci_moveit_config)/config/gazebo_master.urdf" />
  <!--<param name="robot_description" command="$(find xacro)/xacro '/home/ahaan/ws_moveit/src/dvrk_env/dvrk_description/dvrk/dvrk_launch.urdf.xacro'"/>-->

  <!-- Unpause the simulation after loading the robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

  <!-- Spawn the robot in Gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)"
    respawn="false" output="screen" />

  <!-- Load the controller parameters onto the parameter server -->
  <rosparam file="$(find davinci_moveit_config)/config/gazebo_controllers.yaml" />
   <include file="$(find davinci_moveit_config)/launch/ros_controllers.launch"/> 

  <!-- Spawn the Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
  
  </group>
</launch>
